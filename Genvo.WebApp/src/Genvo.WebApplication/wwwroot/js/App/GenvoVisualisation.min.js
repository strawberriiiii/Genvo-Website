function GenvoTree(){this._root=new Node;this._speciesRoot=new SpeciesNode;this.allSpecies={};this.allSpeciesIndexes=[];this.geneLeafs=[];this.allFunctionGroups={};this.allFunctionGroups.undefined=new FunctionGroup("undefined");this.noGeneEvents=0;this.noSpeciations=0;this.noSpeciesLeaf=0}function Node(n){n===undefined&&(n={});this.parent=n.hasOwnProperty("parent")?n.parent:null;this.children=n.hasOwnProperty("children")?n.children:[];this.isLeaf=!1;this.name=n.hasOwnProperty("fullName")?n.fullName:undefined;this.nickname=n.hasOwnProperty("nickname")?n.nickname:undefined;this.event=n.hasOwnProperty("event")?n.event:undefined;this.species=n.hasOwnProperty("species")?n.species:undefined;this.length=n.hasOwnProperty("length")?n.length:undefined;this.noLeafs=n.hasOwnProperty("noLeafs")?n.noLeafs:0;this.FunctionGroup="undefined";this.object=undefined;this.text=undefined;this.colour=undefined;this.subColour=undefined;this.edges={parent:[],children:[]};this.index=undefined}function SpeciesNode(n){(n===undefined||n===null)&&(n={});this.parent=n.hasOwnProperty("parent")?n.parent:null;this.children=n.hasOwnProperty("children")?n.children:[];this.isLeaf=!1;this.name=n.hasOwnProperty("fullName")?n.fullName:undefined;this.nickname=n.hasOwnProperty("nickname")?n.nickname:undefined;this.event=n.hasOwnProperty("event")?n.event:undefined;this.length=n.hasOwnProperty("length")?n.length:undefined;this.colour=n.hasOwnProperty("colour")?n.colour:chroma("#ccc");this.subColour=n.hasOwnProperty("subColour")?n.subColour:chroma("#ccc");this.zPos=n.hasOwnProperty("zPos")?n.zPos:0;this.yPos=n.hasOwnProperty("yPos")?n.yPos:0;this.index=undefined}function FunctionGroup(n){(n===undefined||n===null)&&(n={});this.name=n.hasOwnProperty("name")?n.name:"undefined";this.colour=n.hasOwnProperty("colour")?n.colour:chroma("#555");this.nodes=[]}function generateColourScheme(n,t,i,r){var e=[],u,f;t=t===undefined?1:t;f=chroma.scale(i).mode("lch").correctLightness();u=n>1?1/(n-1):1;for(let t=0;t<n;t++){let n;n=r?f(u*t).darken(2):f(u*t).saturate(1);e.push(n)}return e}function copyNodeData(n,t){for(let i in t)i!=="children"&&(n[i]=t[i])}GenvoTree.prototype.INIT=function(n,t){(t===undefined||t===null)&&(t={});const i=t.hasOwnProperty("showNickname")?t.showNickname:!1;this.isReconciled=n.isReconciled;const r=t.hasOwnProperty("pDup")?t.pDup:2,u=t.hasOwnProperty("pLoss")?t.pLoss:1,f=t.hasOwnProperty("pTransfer")?t.pTransfer:3;this.isReconciled?(this.addJSON(n.ReconTree),this.addJSON(n.ReconSpeciesTree,"species"),this.analyzeGuestTree(n.LabelFormat,i)):(this.addJSON(n.GeneTree),this.addJSON(n.SpeciesTree,"species"),this.analyzeGuestTree(n.LabelFormat,i));this.generateSpeciesColour();this.isReconciled||this.reconcile(r,u,f);this.calculate3DPositions()};Node.prototype.updateObjectPos=function(n){this.object.position.copy(n)};Node.prototype.updateObjectYPos=function(n){var t=this.object.position.clone();t.y=n;this.object.position.copy(t);this.updateEdges(t)};Node.prototype.updateEdges=function(n){this.edges.children.forEach(function(t){t.geometry.vertices[0]=n;t.geometry.verticesNeedUpdate=!0});this.edges.parent.forEach(function(t){t.geometry.vertices[1]=n;t.geometry.verticesNeedUpdate=!0})};GenvoTree.prototype.updateFunctionList=function(){for(let n in this.allFunctionGroups)this.allFunctionGroups[n].nodes=[];for(let n=0;n<this.geneLeafs.length;n++){const t=this.geneLeafs[n];this.allFunctionGroups[t.FunctionGroup].nodes.push(t)}};GenvoTree.prototype.addJSON=function(n,t){const r=t==="species"?this._speciesRoot:this._root;var u=t==="species"?"SpeciesNode":"Node",i=0;GenvoTree.prototype.recurse=function(n,r){var f,e;if(copyNodeData(n,r),n.index=i,n.isLeaf=r.children===undefined?!0:!1,t==="species"&&(n.isLeaf||n.name!==""||(n.name=guid(),n.nickName="No Name"),this.allSpecies[n.name]!==undefined&&alert(`Doublet of species name: ${n.name}`),this.allSpecies[n.name]=n,this.allSpeciesIndexes[i]=n),i++,n.isLeaf)t==="genes"||t===undefined?this.geneLeafs.push(n):t==="species"&&this.noSpeciesLeaf++;else for(f=0;f<r.children.length;f++)e=new window[u]({parent:n}),n.children.push(e),this.recurse(e,r.children[f])};this.recurse(r,n);t==="genes"||t===undefined?this.noGeneEvents=i:t==="species"&&(this.noSpeciations=i)};GenvoTree.prototype.analyzeGuestTree=function(n,t){GenvoTree.prototype.recurse=function(i){for(var r=0,u=i.children.length;r<u;r++)this.recurse(i.children[r]);this.isReconciled&&this.setEventType(i,n);i.isLeaf||this.isReconciled?this.analyzeLabel(i,n,t):(i.noLeafs=0,i.children.forEach(function(n){i.noLeafs+=n.noLeafs}))};this.recurse(this._root)};GenvoTree.prototype.setEventType=function(n,t){switch(t){case"nhx":n.event=n.tag.nhx.event;n.event===undefined&&(n.event="loss")}};GenvoTree.prototype.analyzeLabel=function(n,t,i){const f=["prime","nhx","prefix","postfix"];let r;for(n.noLeafs=1,n.FunctionGroup=this.allFunctionGroups[{name:"undefined"}];;){switch(t){case"prefix":r=this.analyzeLabelPrefix(n.name);n.nickname=i?r.guest:n.name;n.species=this.allSpecies[r.host];break;case"exampleData":case"postfix":var u=this.analyzeLabelPostfix(n.name,"_");n.nickname=i?u[1]:n.name;n.species=this.allSpecies[u[0]];break;case"nhx":n.tag.nhx!==undefined&&(n.nickname=n.tag.nhx.name!==undefined?n.tag.nhx.name:n.name,n.species=this.allSpecies[n.tag.nhx.species]);break;case"prime":n.tag.prime!==undefined&&(n.nickname=n.tag.prime.name!==undefined?n.tag.prime.name:n.name,n.species=this.allSpecies[n.tag.prime.species])}if(n.species===undefined){if(console.log(`Mapping with ${t} label format failed.`),t=f.pop(),t===undefined){alert("We tried all our methods to map your data, but failed.");return}console.log(`Trying to map with ${t} label format insetad`)}else break}};GenvoTree.prototype.analyzeLabelPrefix=function(n){var t={};const i=Object.keys(this.allSpecies);return i.forEach(function(i){n.includes(i)&&(t.host=i,t.guest=n.replace(i,""))}),t};GenvoTree.prototype.analyzeLabelPostfix=function(n,t){var i=n.split(t);const r=[];return i.length<=1?[i[0],i[0]]:(r.push(i.pop()),r.push(i.join("")),r)};GenvoTree.prototype.generateSpeciesColour=function(){const n=Object.keys(this.allSpecies).length,t=generateColourScheme(n,1,["yellow","33E0E0"],!0),i=generateColourScheme(n,.8,["yellow","33E0E0"],!1);visualisation.Update({postOrder:!0,traverseGuest:!0,mainColorScheme:t,subColorScheme:i})};GenvoTree.prototype.findOptRoot=function(){};GenvoTree.prototype.changeRoot=function(){};GenvoTree.prototype.calculate3DPositions=function(){var n=0;GenvoTree.prototype.recurseNodesS=function(t){for(var r,i=0;i<t.children.length;i++)this.recurseNodesS(t.children[i]);switch(t.children.length){case 0:t.zPos=n;n+=50;break;case 1:t.zPos=t.children[0].zPos;break;case 2:r=t.children[1].zPos-t.children[0].zPos;t.zPos=t.children[0].zPos+r/2}};this.recurseNodesS(this._speciesRoot)};